name: Moonflyers Vanilla Desktop # Replace this name with your image name
id: moonflyer # Replace this ID with your image ID
stages:
- id: build
  base: ghcr.io/vanilla-os/nvidia:main # Optionally, Replace this image URL with a different one i.e. nvidia:main, etc
  singlelayer: false
  labels:
    maintainer: self-maintained # Optionally, Replace this with your name
  args:
    DEBIAN_FRONTEND: noninteractive # Set the image environment as non-interactive
  
  # Commands to run first before building the modules
  runs:
    commands:
      - echo 'APT::Install-Recommends "1";' > /etc/apt/apt.conf.d/01norecommends

  modules:
  - name: init-setup
    type: shell
    commands:
    - lpkg --unlock
    - apt-get update

  # Put your custom actions behind this comment

  - name: example-packages # Sample module using the built-in Apt module to install packages
    type: apt
    source:
      packages:
      - vim

  - name: example-commands # Sample module demonstrating the Shell module with custom commands
    type: shell
    commands:
    - echo Example output

  - name: example-modules # Sample module demonstrating importing local and remote modules
    type: includes
    includes:
      - modules/50-install-debs.yml # Sample local module present in this repository
      - gh:vanilla-os/dev-image:main:modules/00-basics.yml # Sample GitHub remote module in the format: `gh:your-name/your-repo:branch:modules/file.yml`
      - https://raw.githubusercontent.com/Vanilla-OS/dev-image/main/modules/05-go.yml # Sample full URL remote module

  - name: virt-dependencies
    type: apt
    source:
      packages:
      - virt-manager
      - openssh-server
      - libvirt-daemon-system
      - libvirt-clients
      - qemu-system qemu-utils

  - name: usb-share-fix
    type: shell
    commands:
      - cp  /usr/share/polkit-1/actions/_org.spice-space.lowlevelusbaccess.policy  /usr/share/polkit-1/actions/org.spice-space.lowlevelusbaccess.policy

  - name: set-libvirt-group
    type: shell
    commands:
      - chmod +x /etc/profile.d/add_libvirt_group.sh
   
  - name: tcc # Install Tuxedo Software
    type: shell
    commands:
    - wget http://deb.tuxedocomputers.com/ubuntu/pool/main/t/tuxedo-keyboard/tuxedo-keyboard_3.2.10_all.deb
    - wget http://deb.tuxedocomputers.com/ubuntu/pool/main/t/tuxedo-control-center/tuxedo-control-center_2.1.12-3_amd64.deb
    - dpkg -i tuxedo-keyboard_3.2.10_all.deb
    - dpkg -i tuxedo-control-center_2.1.12-3_amd64.deb

  - name: syncthing
    type: shell
    commands:
    - apt-get update
    - apt-get install syncthing -y

  - name: vanilla-tools
    type: shell
    source:
      type: tar
      url: https://github.com/Vanilla-OS/vanilla-tools/releases/download/continuous/vanilla-tools.tar.gz
    commands:
    - mkdir -p /usr/bin
    - cp /sources/vanilla-tools/vanilla-tools/nrun /usr/bin/nrun
    - cp /sources/vanilla-tools/vanilla-tools/prime-switch /usr/bin/prime-switch
    - chmod +x /usr/bin/nrun
    - chmod +x /usr/bin/prime-switch

  - name: vanilla-prime-utility
    type: meson
    source:
      type: git
      url: https://github.com/Vanilla-OS/vanilla-prime-utility
      branch: main
      commit: latest
    modules:
    - name: vanilla-prime-utility-deps-install
      type: apt
      source:
        packages:
        - build-essential
        - gettext
        - libadwaita-1-dev
        - meson
  
  # Put your custom actions before this comment

  - name: set-image-name-abroot
    type: includes
    includes:
      - modules/80-set-image-abroot-config.yml

  - name: cleanup
    type: shell
    commands:
    - apt-get autoremove -y
    - apt-get clean
    - lpkg --lock

  - name: fsguard
    type: fsguard
    CustomFsGuard: false
    FsGuardLocation: "/usr/sbin/FsGuard"
    GenerateKey: true
    FilelistPaths: ["/usr/bin"]
    modules:
      - name: remove-prev-fsguard
        type: shell
        commands:
          - rm -rf /FsGuard 
          - rm -f ./minisign.pub ./minisign.key 
          - chmod +x /usr/sbin/init

  - name: cleanup2
    type: shell
    commands:
      - rm -rf /tmp/*
      - rm -rf /var/tmp/*
      - rm -rf /sources
